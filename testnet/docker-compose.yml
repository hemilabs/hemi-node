# Copyright (c) 2024 Hemi Labs, Inc.
# Use of this source code is governed by the MIT License,
# which can be found in the LICENSE file.

---

name: "hemi-testnet-stack"

services:
  # Bitcoin Finality Governor
  bfgd:
    image: hemilabs/bfgd:1.6.3@sha256:13d1c04508ed85df4756ed0681993f9c1625b75bbc765d88c0e6a88bac59d3e6
    profiles: ["hemi", "full"]
    depends_on:
      bfgd-postgres:
        condition: "service_started"
      electrs:
        condition: "service_healthy"
    environment:
      BFG_POSTGRES_URI: "postgres://postgres@bfgd-postgres:5432/bfg?sslmode=disable"
      ### XXXX Make this variable and set to recent block
      BFG_BTC_START_HEIGHT: "3195980"
      BFG_EXBTC_ADDRESS: "electrs:50001"
      BFG_LOG_LEVEL: "INFO"
      BFG_PUBLIC_ADDRESS: ":8383"
      BFG_PRIVATE_ADDRESS: ":8080"
      BFG_BASELINE_L2_BLOCK_HEIGHT: "3000000"
      BFG_BASELINE_L2_BLOCK_TIMESTAMP: "1744110816"
    ports:
      ### CHANGE HOST PORTS
      - '8082:8080'
      - '8385:8383'
    networks:
      - "localnode"
    deploy:
      restart_policy:
        condition: "any"

  # Bitcoin Finality Governor PostgreSQL
  bfgd-postgres:
    build:
      context: "../docker/bfgd-postgres"
      dockerfile: "Dockerfile"
    profiles: ["hemi", "full"]
    volumes:
      - psql_data:/var
    environment:
      POSTGRES_DB: "bfg"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    networks:
      - "localnode"
    command:
      - "postgres"
      # lower random_page_cost (opposed to default 4.0) to cause planner
      # to choose index scans vs sequential scans when at fewer rows in a table
      - "-c"
      - "random_page_cost=1.0"

  # Bitcoind Node
  bitcoind:
    image: "kylemanna/bitcoind@sha256:5d97bbe3c74856818f0b3a1e718eb3968981ab03ce08aaf1c7d528f99aaf30b7"
    profiles: ["l1", "full"]
    volumes:
      - bitcoin_data:/bitcoin/.bitcoin
    ports:
      - '18333:18333'
    networks:
      - "localnode"
    command:
      - "bitcoind"
      - "-testnet=1"
      - "-rpcuser=user"
      - "-rpcpassword=password"
      - "-rpcallowip=0.0.0.0/0"
      - "-rpcbind=0.0.0.0:18332"
      - "-txindex=1"
      - "-rpcworkqueue=400"

  # Bitcoin Secure Sequencer
  bssd:
    image: hemilabs/bssd:1.6.3@sha256:b6782c25b3245f1cede1d7b75bbea4d9fe36f2dc4fa708a9fae03b1f34ee7126
    profiles: ["hemi", "hemi-min", "full"]
    environment:
      BSS_BFG_URL: "ws://bfgd:8080/v1/ws/private"
      BSS_LOG_LEVEL: "INFO"
      BSS_ADDRESS: ":8081"
    ports:
      - '8081:8081'
    networks:
      - "localnode"

  # Electrs (Bitcoin indexer, used by BFG)
  electrs:
    build:
      context: ./..
      dockerfile: "./docker/electrs.Dockerfile"
    profiles: ["hemi", "full"]
    volumes:
      - ./cookie:/tmp/.cookie
      - electrs_data:/data/electrs
    environment:
      RUST_LOG: debug
      RUST_BACKTRACE: "full"
    networks:
      - "localnode"
    command:
      - "electrs_bitcoin/bin/electrs"
      - "--electrum-rpc-addr"
      - "0.0.0.0:50001"
      - "--daemon-rpc-addr"
      - "${BITCOINENDPOINT:-bitcoind:18332}"
      - "--network"
      - "testnet"
      # NOTE: If you expose electrs ports,
      # you may want to ensure that this is changed!
      - "--cookie"
      - "${BITCOINCREDS:-user:password}"
      - "-vvv"
      - "--timestamp"
      - "--utxos-limit"
      - "50000"
      - "--electrum-txs-limit"
      - "50000"
      - "--jsonrpc-import"
      - "--db-dir=/data/electrs/blockstream"
    deploy:
      restart_policy:
        condition: "on-failure"

  # Ethereum L1 node
  geth-l1:
    image: ethereum/client-go@sha256:343cff592e1a9daf99a89261d3263941ff9c3350b62b3ebc0f7c30d35721d905
    profiles: ["l1", "full"]
    volumes:
      - geth_data:/tmp/geth
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex
    ports:
      - '8545:8545'
    networks:
      - "localnode"
    command:
      - "--sepolia"
      - "--http"
      - "--http.port=8545"
      - "--http.addr=0.0.0.0"
      - "--http.api=eth,net,engine,admin"
      - "--authrpc.vhosts=*"
      - "--authrpc.addr=0.0.0.0"
      - "--authrpc.jwtsecret=/tmp/jwt/jwt.hex"
      - "--http.vhosts"
      - "*"
      - "--datadir"
      - "/tmp/geth"
      - "--gpo.percentile=0"
    working_dir: "/tmp/geth"

  # Hemi L2 node
  op-geth-l2:
    image: docker.io/hemilabs/op-geth:157cd4b@sha256:2988074ab0bbd4d343fc4132782ecde5d230436626c7da4e841bd1b9f0f2c81a
    platform: linux/amd64
    # XXX does geth need to be fully synced
    profiles: ["hemi", "hemi-min", "full"]
    depends_on:
      op-geth-l2-init:
        condition: "service_completed_successfully"
      op-geth-l2-init-tbc:
        condition: "service_completed_successfully"
    healthcheck:
      test: ["CMD", "nc", "-vz", "0.0.0.0", "18546"]
      interval: 5s
      timeout: 5s
      retries: 999999
    volumes:
      - ./genesis.json:/tmp/genesis.json
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex:ro
      - ./entrypoint.sh:/tmp/entrypoint.sh
      - op-geth_data:/tmp/datadir
      - ./rollup.json:/tmp/rollup.json
      - ./l2-config.toml:/tmp/l2-config.toml
      - tbc_data:/tbcdata
    environment:
      OP_GETH_L1_RPC: "${GETHL1ENDPOINT:-http://geth-l1:8545}"
      OP_GETH_L2_READINESS_RPC: "http://localhost:18546"
    ports:
      - '18546:18546'
      - '28546:28546'
    networks:
      - "localnode"
    entrypoint:
      - "sh"
      - "/tmp/entrypoint.sh"
    working_dir: "/tmp"
    ulimits:
      memlock: -1
    deploy:
      restart_policy:
        condition: "on-failure"

  # Init container for Hemi L2 node
  op-geth-l2-init:
    image: alpine:3.22.1@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
    profiles: ["hemi", "hemi-min", "full", "hemitrap"]
    volumes:
      - op-geth_data:/tmp/datadir
    command:
      - "chown"
      - "-R"
      - "65532"  # geth user
      - "/tmp/datadir"

  # Init TBC container for Hemi L2 node
  op-geth-l2-init-tbc:
    image: alpine:3.22.1@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
    profiles: ["hemi", "hemi-min", "full", "hemitrap"]
    volumes:
      - tbc_data:/tbcdata
    command:
      - "chown"
      - "-R"
      - "65532"  # geth user
      - "/tbcdata"

  # Hemi op-node
  op-node:
    image: ghcr.io/hemilabs/op-node:f88221e@sha256:1878d832ca8f386247de6f61a86441b07c29f8cd2bb8628b77de11c54f98448f
    platform: linux/amd64
    profiles: ["hemi", "hemi-min", "full"]
    depends_on:
      op-geth-l2:
        condition: "service_healthy"
    volumes:
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex
      - ./op-node-priv-key.txt:/tmp/op-node-priv-key.txt
      - ./rollup.json:/tmp/rollup.json
    environment:
      OP_NODE_BSS_WS: "http://bssd:8081/v1/ws"
    ports:
      - '8547:8547'
    networks:
      - "localnode"
    command:
      - "op-node"
      - "--ignore-missing-pectra-blob-schedule"
      - "--l1=${GETHL1ENDPOINT:-http://geth-l1:8545}"
      - "--l1.rpckind=any"
      - "--l1.beacon=${PRYSMENDPOINT:-http://prysm:3500}"
      - "--l2=ws://op-geth-l2:8551"
      - "--l2.jwt-secret=/tmp/jwt/jwt.hex"
      - "--sequencer.enabled=false"
      - "--rollup.config=/tmp/rollup.json"
      - "--override.ecotone=1715865630"
      - "--override.canyon=1715865630"
      - "--override.delta=1715865630"
      - "--rpc.addr=0.0.0.0"
      - "--rpc.port=8547"
      - "--p2p.static=/ip4/34.147.95.117/tcp/9003/p2p/16Uiu2HAmFtpk79F9M1TdC2cnq8c1pJy59yrb5AWeM1qH6d13Fbi2,/ip4/34.90.95.68/tcp/9003/p2p/16Uiu2HAmEDnT7hSbpD5x7TEyywofqtMw6CBCn1Yasn8Ut8CefBi3,/ip4/34.34.97.92/tcp/9003/p2p/16Uiu2HAm9SXFzfB1Mx5aJ6j9QKSs44jA4MNiDVBbGF2JPWs4h8eU"
      - "--p2p.no-discovery"
      - "--p2p.ban.peers=false"
      - "--p2p.ban.duration=1s"
      - "--p2p.ban.threshold=-10000000000"
      - "--log.level=info"
      - "--syncmode=${OPSYNCMODE:-execution-layer}"
      - "--override.pectrablobschedule=1748963425"
      - "--override.isthmus=1748963425"
      - "--override.holocene=1748963425"
      - "--override.granite=1748963425"
      - "--override.fjord=1748963425"
    deploy:
      restart_policy:
        condition: "any"

  # Prysm
  prysm:
    image: prysmaticlabs/prysm-beacon-chain:v5.3.2@sha256:7e2ca890f1b3cbeef69723399767dfbba5c6c660e4e230bc0b4dbe778992e364
    profiles: ["l1", "full"]
    volumes:
      - prysm_data:/data
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex:ro
    ports:
      - '4000:4000'
    networks:
      - "localnode"
    command:
      - "--execution-endpoint=${GETHL1ENDPOINT:-http://geth-l1:8551}"
      - "--sepolia"
      - "--jwt-secret=/tmp/jwt/jwt.hex"
      - "--checkpoint-sync-url=https://sepolia.beaconstate.info"
      - "--genesis-beacon-api-url=https://sepolia.beaconstate.info"
      - "--accept-terms-of-use"
      - "--datadir=/data/prysm"
      - "--rpc-host=0.0.0.0"
      - "--enable-debug-rpc-endpoints"
      - "--grpc-gateway-host=0.0.0.0"
      - "--enable-experimental-backfill"

  geth-l1-forked:
    image: ghcr.io/foundry-rs/foundry:v1.4.1@sha256:629bebb49d1ba44a52a9fc14229dd58930e3193b4b206ae43ad00089e9ead95b
    profiles:
      - hemitrap
    environment:
      ANVIL_IP_ADDR: '0.0.0.0'
    ports:
      - 9988:9988
    networks:
      - "localnode"
    entrypoint:
      - anvil
    command:
      - --block-time
      - '12'
      - --fork-url
      - ${GETHL1ENDPOINT}
      - --fork-chain-id
      - '11155111'
      - --fork-block-number
      - '-1' # latest
      - --port
      - '9988'

  op-node-forked:
    # yamllint disable-line rule:line-length
    image: "ghcr.io/hemilabs/op-node:9cc3af2@sha256:ce6ee92b90d28656c93ffb58f3bdb9d5436015e91ecf587bb5ae2832a1be5e2a"
    profiles: ["hemitrap"]
    environment:
      OP_NODE_BSS_WS: "http://bssd:8081/v1/ws"
    ports:
      - '8547:8547'
    platform: linux/amd64
    networks:
      - "localnode"
    command:
      - "op-node"
      - "--ignore-missing-pectra-blob-schedule"
      - "--l1=http://geth-l1-forked:9988"
      - "--l1.rpckind=basic"
      - "--l1.beacon=${PRYSMENDPOINT}"
      - "--l1.epoch-poll-interval=12s"
      - "--l2=ws://op-geth-l2-forked:8551"
      - "--l2.jwt-secret=/tmp/jwt/jwt.hex"
      - "--sequencer.enabled=true"
      - "--sequencer.stopped=false"
      - "--rollup.config=/tmp/rollup.json"
      - "--override.ecotone=1715865630"
      - "--override.canyon=1715865630"
      - "--override.delta=1715865630"
      - "--rpc.addr=0.0.0.0"
      - "--rpc.port=8547"
      - "--p2p.disable"
      - "--p2p.priv.path=/tmp/op-node-priv-key.txt"
      - "--p2p.sequencer.key=5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a"
      - "--log.level=info"
      - "--override.pectrablobschedule=1748963425"
      - "--override.isthmus=1748963425"
      - "--override.holocene=1748963425"
      - "--override.granite=1748963425"
      - "--override.fjord=1748963425"
      - "--l1.trustrpc=true"
      - "--hemitrap.enabled"
    depends_on:
      op-geth-l2-forked:
        condition: "service_healthy"
    volumes:
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex
      - ./op-node-priv-key.txt:/tmp/op-node-priv-key.txt
      - ./rollup.json:/tmp/rollup.json
    deploy:
      restart_policy:
        condition: "any"

  op-batcher-forked:
    image: "ghcr.io/hemilabs/op-node:9cc3af2@sha256:ce6ee92b90d28656c93ffb58f3bdb9d5436015e91ecf587bb5ae2832a1be5e2a"
    profiles: ["hemitrap"]
    networks:
      - "localnode"
    command:
      - "bin/op-batcher"
      - "--l2-eth-rpc=http://op-geth-l2-forked:18546"
      - "--rollup-rpc=http://op-node-forked:8547"
      - "--poll-interval=1s"
      - "--sub-safety-margin=1"
      - "--num-confirmations=1"
      - "--safe-abort-nonce-too-low-count=1"
      - "--resubmission-timeout=15s"
      - "--rpc.addr=0.0.0.0"
      - "--rpc.port=8548"
      - "--rpc.enable-admin"
      - "--max-channel-duration=5"
      - "--max-pending-tx=1"
      - "--l1-eth-rpc=http://geth-l1-forked:9988"
      - "--private-key=59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
      - "--throttle-threshold=0"
    deploy:
      restart_policy:
        condition: "any"
    healthcheck:
      start_period: 180s
    depends_on:
      geth-l1-forked:
        condition: "service_started"
      op-geth-l2-forked:
        condition: "service_healthy"
      op-node-forked:
        condition: "service_started"

  op-proposer-forked:
    image: "ghcr.io/hemilabs/op-node:9cc3af2@sha256:ce6ee92b90d28656c93ffb58f3bdb9d5436015e91ecf587bb5ae2832a1be5e2a"
    profiles: ["hemitrap"]
    networks:
      - "localnode"
    command:
      - bin/op-proposer
      - --poll-interval=1s
      - --rpc.port=8560
      - --private-key=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - --l1-eth-rpc=http://geth-l1-forked:9988
      - --rollup-rpc=http://op-node-forked:8547
      - --resubmission-timeout=15s
      - --safe-abort-nonce-too-low-count=1
      - --txmgr.not-in-mempool-timeout=3s
      - --allow-non-finalized=true
      - --l2oo-address=0x032d1e1dd960a4b027a9a35ff8b2b672e333bc27
    deploy:
      restart_policy:
        condition: "any"
    depends_on:
      geth-l1-forked:
        condition: "service_started"
      op-geth-l2-forked:
        condition: "service_healthy"
      op-node-forked:
        condition: "service_started"
    healthcheck:
      start_period: 180s

  op-geth-l2-forked:
    # yamllint disable-line rule:line-length
    image: "ghcr.io/hemilabs/op-geth:e79d992@sha256:dbe292e013345a8a41c9dc8ee09088853410b17c06ef779258d251f55356c501"
    profiles: ["hemitrap"]
    environment:
      OP_GETH_L1_RPC: http://geth-l1-forked:9988"
      OP_GETH_L2_READINESS_RPC: "http://localhost:18546"
      GETH_MAXPEERS: 0
    ports:
      - '18546:18546'
      - '28546:28546'
    networks:
      - "localnode"
    entrypoint:
      - "sh"
      - "/tmp/entrypoint.sh"
    platform: linux/amd64
    # XXX does geth need to be fully synced
    depends_on:
      op-geth-l2-init:
        condition: "service_completed_successfully"
      op-geth-l2-init-tbc:
        condition: "service_completed_successfully"
    healthcheck:
      test: ["CMD", "nc", "-vz", "0.0.0.0", "18546"]
      interval: 5s
      timeout: 5s
      retries: 999999
    volumes:
      - ./testnet-genesis.json:/tmp/testnet-genesis.json
      # change this token value if you expose this service's ports for
      # connection from other machines
      - ./jwt.hex:/tmp/jwt/jwt.hex:ro
      - ./entrypoint.sh:/tmp/entrypoint.sh
      - op-geth_data:/tmp/datadir
      - ./rollup.json:/tmp/rollup.json
      - tbc_data:/tbcdata
      - ./l2-config.toml:/tmp/l2-config.toml
    working_dir: "/tmp"
    ulimits:
      memlock: -1
    deploy:
      restart_policy:
        condition: "on-failure"

networks:
  localnode: {}

volumes:
  bitcoin_data: {}
  geth_data: {}
  prysm_data: {}
  psql_data: {}
  op-geth_data: {}
  electrs_data: {}
  tbc_data: {}
